{"version":3,"sources":["components/Counters.js","components/Timer.js","components/Controls.js","App.js","reportWebVitals.js","index.js"],"names":["Counters","breakLength","sessionLength","clickButton","className","id","icon","faArrowDown","onClick","faArrowUp","e","Timer","time","timerLength","sessionBreak","min","Math","floor","sec","Controls","pausePlayClicked","pausePlay","resetClicked","faPause","faPlay","faUndo","App","useState","setBreakLength","setSessionLength","setPausePlay","setTimerLength","setSessionBreak","useEffect","document","getElementsByTagName","play","interval","setInterval","prevTime","clearInterval","src","button","querySelectorAll","classList","add","setTimeout","remove","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f9e09846.chunk.js","sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowDown } from \"@fortawesome/free-solid-svg-icons\";\nimport { faArrowUp } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Counters = ({breakLength, sessionLength, clickButton}) => {\n    return (\n        <div className=\"counters-container\">\n            <div className='break'>\n                <h2 id=\"break-label\">Break Length</h2>\n                <div className=\"counter-container\">\n                    <FontAwesomeIcon className=\"icons\" id=\"break-decrement\" icon={faArrowDown} onClick={() => clickButton(\"break-decrement\")} />\n                    <div className=\"counter\" id=\"break-length\">{breakLength}</div>\n                    <FontAwesomeIcon className=\"icons\" id=\"break-increment\" icon={faArrowUp} onClick={(e) => clickButton(\"break-increment\")}/>\n                </div>\n            </div>\n            <div className='session'>\n                <h2 id=\"session-label\">Session Length</h2>\n                <div className=\"counter-container\">\n                    <FontAwesomeIcon className=\"icons\" id=\"session-decrement\" icon={faArrowDown} onClick={() => clickButton(\"session-decrement\")}/>\n                    <div className=\"counter\" id=\"session-length\">{sessionLength}</div>\n                    <FontAwesomeIcon className=\"icons\" id=\"session-increment\" icon={faArrowUp} onClick={() => clickButton(\"session-increment\")}/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Counters\n","const Timer = ({time, timerLength, sessionBreak}) => {\n\n    let min = Math.floor(timerLength/60);\n    let sec = timerLength%60;\n    min = min<10 ? \"0\"+min : min;\n    sec = sec<10 ? \"0\"+sec : sec;\n\n    return (\n        <div className='timer-container'>\n            <h2 id=\"timer-label\">{sessionBreak ? \"Session\" : \"Break\"}</h2>\n            <div id=\"time-left\">{min+\":\"+sec}</div>\n        </div>\n    )\n}\n\nexport default Timer\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay } from \"@fortawesome/free-solid-svg-icons\";\nimport { faPause } from \"@fortawesome/free-solid-svg-icons\";\nimport { faUndo } from \"@fortawesome/free-solid-svg-icons\";\n\n\nconst Controls = ({pausePlayClicked, pausePlay, resetClicked}) => {\n\n \n    return (\n        <div className=\"controls-container\">\n            {pausePlay ? <FontAwesomeIcon className=\"icons\" id=\"start-stop\" icon={faPause} onClick={pausePlayClicked}/> : <FontAwesomeIcon className=\"icons\" id=\"start-stop\" icon={faPlay} onClick={pausePlayClicked}/>}\n            <FontAwesomeIcon className=\"icons\" id=\"reset\" icon={faUndo} onClick={resetClicked} />\n        </div>\n    )\n}\n\nexport default Controls\n","import {useState, useEffect} from 'react'\nimport Counters from './components/Counters'\nimport Timer from './components/Timer'\nimport Controls from './components/Controls'\n\n\nfunction App() {\n\n  const [breakLength, setBreakLength] = useState(5);\n  const [sessionLength, setSessionLength] = useState(25);\n  const [pausePlay, setPausePlay] = useState(false);\n  const [timerLength, setTimerLength] = useState(sessionLength*60);\n  const [sessionBreak, setSessionBreak] = useState(true);\n\n  const handleClick = (id) => {\n    const button = document.querySelectorAll(\".icons\");\n    switch(id){\n      case \"break-decrement\" :\n        button[0].classList.add(\"icons-clicked\");\n        setTimeout(function() {\n          button[0].classList.remove(\"icons-clicked\");\n        }, 100);\n        if(breakLength > 1) {\n          setBreakLength(breakLength-1);\n        }\n        break;\n      case \"break-increment\" :\n        button[1].classList.add(\"icons-clicked\");\n        setTimeout(function() {\n          button[1].classList.remove(\"icons-clicked\");\n        }, 100);\n        if(breakLength < 60) {\n          setBreakLength(breakLength+1);\n        } \n        break;\n      case \"session-decrement\" :\n        button[2].classList.add(\"icons-clicked\");\n        setTimeout(function() {\n          button[2].classList.remove(\"icons-clicked\");\n        }, 100);\n        if(sessionLength > 1) {\n          setSessionLength(sessionLength-1);\n        }\n        break;\n      case \"session-increment\" :\n        button[3].classList.add(\"icons-clicked\");\n        setTimeout(function() {\n          button[3].classList.remove(\"icons-clicked\");\n        }, 100);\n        if(sessionLength < 60) {\n          setSessionLength(sessionLength+1);\n        } \n        break;\n      default  :\n        break;\n    }\n  }\n\n\n  useEffect(() => {\n    setTimerLength(sessionLength*60);\n  },[sessionLength]);\n\n\n  useEffect(() => {\n    if(timerLength === 0 && sessionBreak === true) {\n      setSessionBreak(false);\n      setTimerLength(breakLength*60);\n      const audio = document.getElementsByTagName(\"audio\")[0];\n      audio.play();\n    }\n    else if(timerLength === 0 && sessionBreak === false) {\n      setSessionBreak(true);\n      setTimerLength(sessionLength*60);\n      const audio = document.getElementsByTagName(\"audio\")[0];\n      audio.play();\n    }\n  }, [timerLength, breakLength, sessionLength, sessionBreak])\n\n\n  useEffect(() => {\n    let interval = null;\n    if(pausePlay) {\n      interval = setInterval(() => {\n        setTimerLength(prevTime => prevTime-1);\n      }, 1000);\n    }\n    else {\n      clearInterval(interval);\n    }\n\n    return () => clearInterval(interval);\n  }, [pausePlay]);\n\n\n  const handleReset = () => {\n    const button = document.querySelectorAll(\".icons\");\n    button[5].classList.add(\"icons-clicked\");\n    setTimeout(function() {\n      button[5].classList.remove(\"icons-clicked\");\n    }, 100);\n    setBreakLength(5);\n    setSessionLength(25);\n    setPausePlay(false);\n    setTimerLength(sessionLength*60);\n    setSessionBreak(true);\n  }\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"first-half\">\n        <header>\n          <h1 id=\"title\">25 + 5 Clock</h1>\n          <audio src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"></audio>\n        </header>\n        <Counters breakLength={breakLength} sessionLength={sessionLength} clickButton={handleClick}/>\n      </div>\n      <div className=\"second-half\">\n        <Timer time={sessionLength} timerLength={timerLength} sessionBreak={sessionBreak}/>\n        <Controls pausePlayClicked={() => setPausePlay(!pausePlay)} pausePlay={pausePlay} resetClicked={handleReset} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}